COLOR_RED="\e[0;31m"
COLOR_GREEN="\e[0;32m"
COLOR_YELLOW="\e[0;33m"
COLOR_BLUE="\e[0;34m"
COLOR_PURPLE="\e[0;35m"
COLOR_CYAN="\e[0;36m"
COLOR_WHITE="\e[0;37m"
COLOR_LIGHT_RED="\e[01;31m"
COLOR_LIGHT_GREEN="\e[01;32m"
COLOR_LIGHT_YELLOW="\e[01;33m"
COLOR_LIGHT_BLUE="\e[01;34m"
COLOR_LIGHT_PURPLE="\e[01;35m"
COLOR_LIGHT_CYAN="\e[01;36m"
COLOR_OCHRE="\e[38;5;95m"
COLOR_RESET="\e[0m"

function git_color {
	local git_status="$(git status 2> /dev/null)"

    	if [[ ! $git_status =~ "working directory clean" ]] && [[ ! $git_status =~ "working tree clean" ]]; then
        	echo -e $COLOR_RED
	elif [[ $git_status =~ "Your branch is ahead of" ]]; then
	      	echo -e $COLOR_YELLOW
	elif [[ $git_status =~ "nothing to commit" ]]; then
		echo -e $COLOR_GREEN
	else
		echo -e $COLOR_OCHRE
	fi
}

function git_branch {
	local git_status="$(git status 2> /dev/null)"
    	local on_branch="On branch ([^${IFS}]*)"
      	local on_commit="HEAD detached at ([^${IFS}]*)"

        if [[ $git_status =~ $on_branch ]]; then
		local branch=${BASH_REMATCH[1]}
	        echo "($branch)"
	 elif [[ $git_status =~ $on_commit ]]; then
	      	local commit=${BASH_REMATCH[1]}
		echo "($commit)"
	 fi
}

PS1="\[$COLOR_LIGHT_PURPLE\]\h\[$COLOR_LIGHT_CYAN\]@\u:"	# host@username
PS1+="\[$COLOR_LIGHT_BLUE\]\w"    							# pwd
PS1+="\[\$(git_color)\]"        							# colors git status
PS1+="\$(git_branch)"           							# prints current branch
PS1+="\[$COLOR_BLUE\]\$\[$COLOR_RESET\] "					# '#' for root, else '$'
export PS1
